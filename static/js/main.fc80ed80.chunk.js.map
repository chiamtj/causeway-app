{"version":3,"sources":["API.js","config/index.js","screens/CausewayCam.js","reportWebVitals.js","index.js"],"names":["API","axios","create","baseURL","env","process","config","baseUrl","toUpperCase","CausewayCam","fetchLatestImage","bind","filterImages","state","cameraNo","retImage","timeStamp","this","console","log","a","get","x","response","trafficImages","status","data","returnResults","items","cameras","camera_id","localTime","Date","timestamp","toTimeString","setState","image","e","preventDefault","change","target","value","className","onChange","src","alt","height","width","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+RAMeA,E,OAJHC,EAAMC,OAAO,CACrBC,QAAQ,wDCHNC,G,MAAMC,SAERC,EAAS,CACTC,QAAS,2CAKT,OAAQH,EAAII,eACR,IAAK,QACDF,EAAOC,QAAU,4CACjB,MACJ,IAAK,aACDD,EAAOC,QAAU,gDAKdD,Q,OCbTG,E,kDACF,aAAgB,IAAD,8BACX,gBACKC,iBAAiB,EAAKA,iBAAiBC,KAAtB,gBACtB,EAAKC,aAAa,EAAKA,aAAaD,KAAlB,gBAGlB,EAAKE,MAAM,CAEPC,SAAU,OACVC,SAAU,GACVC,UAAW,IAVJ,E,qDAcf,WACIC,KAAKP,mBACLQ,QAAQC,IAAI,iB,qEAGhB,oCAAAC,EAAA,sEAC2BpB,EAAIqB,MAD/B,OAWI,IAAWC,KAVLC,EADV,OAEIL,QAAQC,IAAK,sBAAuBI,GAEhCC,EAAgB,GACI,MAApBD,EAASE,SACTD,EAAgBD,EAASG,MAIvBC,EAAgBH,EAAcI,MAAM,GAAGC,QAErCF,EAAcL,GAAGQ,YAAcb,KAAKJ,MAAMC,WAGtCiB,EAAY,IAAIC,KAAKL,EAAcL,GAAGW,WAAWC,eAErDjB,KAAKkB,SAAS,CACVpB,SAAUY,EAAcL,GAAGc,MAC3BpB,UAAWe,IAEfb,QAAQC,IAAI,kBAAmBF,KAAKJ,MAAME,WAKlDE,KAAKkB,SAAL,eACOlB,KAAKJ,QA3BhB,gD,gFAgCA,SAAawB,GACTA,EAAEC,iBACF,IAAMC,EAASF,EAAEG,OAAOC,MACxBvB,QAAQC,IAAIoB,GAEZtB,KAAKkB,SAAL,2BACOlB,KAAKJ,OADZ,IAEIC,SAAUyB,KAGdtB,KAAKP,qB,oBAIT,WAMI,OAFAQ,QAAQC,IAAI,YAAaF,KAAKJ,MAAME,SAAUE,KAAKJ,MAAMG,WAGrD,sBAAK0B,UAAU,YAAf,UACI,6CACA,8BACI,+BACI,yBAAQC,SAAU1B,KAAKL,aAAvB,UACI,wBAAQ6B,MAAM,OAAd,kCACA,wBAAQA,MAAM,OAAd,6BACA,wBAAQA,MAAM,OAAd,0CAIZ,uBACA,gCACA,sBAAKC,UAAU,YAAf,yBAAwCzB,KAAKJ,MAAMG,aACnD,qBAAK4B,IAAK3B,KAAKJ,MAAME,SAAU8B,IAAI,GAAGC,OAAO,MAAMC,MAAQ,WAE1DzC,EAAOC,QAhBZ,W,GAzEcyC,IAAMC,WA+FjBxC,ICxFAyC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.fc80ed80.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst API = axios.create({\r\n    baseURL:\"https://api.data.gov.sg/v1/transport/traffic-images\",\r\n});\r\n\r\nexport default API;","const env = process.env.REACT_APP_ENV;\r\n\r\nlet config = {\r\n    baseUrl: \"https://chiamtj.github.io/causeway-app/\",\r\n};\r\n\r\nif (env) {\r\n    // eslint-disable-next-line default-case\r\n    switch (env.toUpperCase()) {\r\n        case \"STAGE\":\r\n            config.baseUrl = \"https://chiamtj.github.io/causeway-stage/\";\r\n            break;\r\n        case \"PRODUCTION\":\r\n            config.baseUrl = \"https://chiamtj.github.io/causeway-app/final/\";\r\n        \r\n    }\r\n}\r\n\r\nexport default config;","import React from \"react\";\r\nimport API from \"../API\";\r\nimport \"./CausewayCam.css\";\r\nimport config from \"../config/index.js\";\r\n\r\nclass CausewayCam extends React.Component {\r\n    constructor () {\r\n        super();\r\n        this.fetchLatestImage=this.fetchLatestImage.bind(this);\r\n        this.filterImages=this.filterImages.bind(this);\r\n\r\n        //Set State in Class\r\n        this.state={\r\n            // trafficImages: [],\r\n            cameraNo: \"2702\",\r\n            retImage: \"\",\r\n            timeStamp: \"\",\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchLatestImage();\r\n        console.log(\"First Mount\");\r\n    }\r\n\r\n    async fetchLatestImage() {\r\n        const response = await API.get();\r\n        console.log (\"Checking API data: \", response);\r\n\r\n        let trafficImages = [];\r\n        if (response.status === 200) {\r\n            trafficImages = response.data;\r\n        }\r\n        // console.log(\"Response Data:\", trafficImages);\r\n\r\n        const returnResults = trafficImages.items[0].cameras;\r\n        for (const x in returnResults) {\r\n            if (returnResults[x].camera_id === this.state.cameraNo) {\r\n                // console.log(returnResults[x].image);\r\n\r\n                let localTime = new Date(returnResults[x].timestamp).toTimeString();\r\n\r\n                this.setState({\r\n                    retImage: returnResults[x].image,\r\n                    timeStamp: localTime,\r\n                });\r\n                console.log(\"Current Image: \", this.state.retImage);\r\n            }\r\n        }\r\n        \r\n        //Set State to update images\r\n        this.setState( {\r\n            ...this.state,\r\n            // trafficImages,\r\n        })\r\n    }\r\n\r\n    filterImages(e){\r\n        e.preventDefault();\r\n        const change = e.target.value;\r\n        console.log(change);\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            cameraNo: change,\r\n        })\r\n\r\n        this.fetchLatestImage();\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        //Deconstructing\r\n        // const { trafficImages } = this.state;\r\n        console.log(\"In Render\", this.state.retImage, this.state.timeStamp);\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <h1>CausewayCam</h1>\r\n                <div>\r\n                    <form>\r\n                        <select onChange={this.filterImages}>\r\n                            <option value=\"2702\">Woodlands Checkpoint</option>\r\n                            <option value=\"2701\">Causeway Camera</option>\r\n                            <option value=\"2704\">BKE Toward Checkpoint</option>\r\n                        </select>\r\n                    </form>\r\n                </div>\r\n                <hr/>\r\n                <div>\r\n                <div className=\"timestamp\">Time taken: {this.state.timeStamp}</div>\r\n                <img src={this.state.retImage} alt=\"\" height=\"540\" width = \"960\"/>\r\n                </div>\r\n                {config.baseUrl};\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CausewayCam;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n// import App from './App';\nimport Causewaycam from \"../src/screens/CausewayCam\"\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Causewaycam />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}